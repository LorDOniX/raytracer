Raytracer
=========

Start:

npm install
./dev-server.js 

Workflow:

- load ply
- build geometry
- build BVH tree from geometry
- render final image using BVH tree

TODO:

* vector.h [DONE]
* BVH.cpp [DONE]
* BVH.h [DONE]
* camera.cpp [DONE]
* camera.h [DONE]
* cubemap.h [DONE]
* funcs.cpp [DONE]
* geometry.h [DONE]
* intersection.cpp [DONE]
* intersection.h [DONE]
* main.cpp [DONE]
* ply.cpp [DONE]
* ply.h [DONE]
* raytrace.cpp [DONE]
* raytrace.h [DONE]
* render.cpp [DONE]
* render.h [DONE]
* stdafx.h [DONE]
* structs.h [DONE]

NOTES:

var myImg = new Image();
myImg.src = 'image.jpg';
var context = document.getElementById('canvas').getContext('2d');
context.drawImage(myImg, 0, 0);
data = context.getImageData(x, y, 1, 1).data;

ADDON:


raytracer.factory("XXX", [
	"AAA",
function(
	AAA
) {
	
	var XXX = function() {
	};

	XXX.prototype. = function() {

	};
	
	return XXX;
});
